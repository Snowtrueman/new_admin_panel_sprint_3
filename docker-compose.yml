version: '3'
services:
  backend:
    build: django_api
    expose:
      - "8000"
    depends_on:
      parser:
       condition: service_completed_successfully
    env_file:
      - django_api/.env
    networks:
      - etl_network
    volumes:
      - static-files:/var/www/app/static
    restart: on-failure

  parser:
    build: data_parser
    depends_on:
      - postgres
    env_file:
      - data_parser/.env
    networks:
      - etl_network

  etl:
    build: etl
    depends_on:
      elastic:
        condition: service_healthy
      postgres:
        condition: service_started
      redis:
        condition: service_started

    env_file:
      - etl/.env
    networks:
      - etl_network
    restart: on-failure

  postgres:
    build: postgres
    expose:
      - "5432"
    env_file:
      - postgres/.env
    networks:
      - etl_network
    restart: on-failure

  redis:
    image: redis:latest
    expose:
      - "6379"
    networks:
      - etl_network
    volumes:
      - redis_data:/data
    restart: on-failure

  elastic:
    container_name: elastic
    image: elasticsearch:8.6.2
    expose:
      - "9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    healthcheck:
      test: curl -s http://elastic:9200 >/dev/null || exit 1
      interval: 15s
      timeout: 15s
      retries: 3
    networks:
      - etl_network
    restart: on-failure

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - ./nginx/data:/data/error_pages:ro
      - static-files:/data/static:ro
    depends_on:
      - backend
    expose:
      - "80"
    ports:
      - "80:80"
    networks:
      - etl_network
    restart: on-failure

volumes:
  static-files:
  redis_data:

networks:
  etl_network: